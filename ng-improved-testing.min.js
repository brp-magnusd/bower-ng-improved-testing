/*! ng-improved-testing 18-12-2014 */
!function(){"use strict";function a(){function a(a){if(!angular.isObject(a))return!1;for(var b in a){var c=a[b];if(angular.isFunction(c)&&"constructor"!==b&&c!==Object.prototype[b])return!0}return!1}function b(a){if(!c(a)&&!c(a.prototype,"constructor"))return jasmine.createSpy();var b=jasmine.createSpy();return e(a,b,!0),b.prototype=Object.create(a.prototype),e(a.prototype,b.prototype,!0,"constructor"),b.prototype.constructor=a.prototype.constructor,b}function c(a,b){for(var c in a)if(a.hasOwnProperty(c)&&(!b||-1===b.indexOf(c)))return!0;return!1}function d(a){var b={};return e(a,b,!1,"constructor"),b}function e(a,b,c,d){d=Array.prototype.slice.call(arguments,3);for(var e in a)if(!c||a.hasOwnProperty(e)){var f=a[e];!c&&(c||f===Object.prototype[e])||d&&-1!==d.indexOf(e)||(b[e]=angular.isFunction(f)?jasmine.createSpy(e):f)}}this.canInstanceBeMocked=function(b){return angular.isFunction(b)||a(b)},this.mockInstance=function(c){if(angular.isFunction(c))return b(c);if(a(c))return d(c);throw"Could not mock provided value: "+c}}function b(a,b,c){function d(d){function e(a,b,c,d,e){var f={providerName:a,componentName:b,componentKind:c};d&&(f.dependenciesUsage=d,f.dependencies=e),j.push(f),"$animateProvider"===a&&(g=!0)}function f(a){if("$provide"===a)return"serviceAsIs";if("$filterProvider"===a)return"filterAsIs";if("$controllerProvider"===a)return"controllerAsIs";if("$compileProvider"===a)return"directiveAsIs";if("$animateProvider"===a)return"animationAsIs";throw"Unsupported provider: "+a}var g=!1,h=null,i=!1,j=[];this.config=function(a){return h=a,this},this.includeAll=function(){return i=!0,this},this.serviceWithMocks=function(a){return e("$provide",a,"withMocks"),this},this.serviceWithMocksFor=function(a,b){return b=Array.prototype.slice.call(arguments,1),e("$provide",a,"withMocks","for",b),this},this.serviceWithMocksExcept=function(a,b){return b=Array.prototype.slice.call(arguments,1),e("$provide",a,"withMocks","except",b),this},this.serviceAsIs=function(a){return e("$provide",a,"asIs"),this},this.filterWithMocks=function(a){return e("$filterProvider",a,"withMocks"),this},this.filterWithMocksFor=function(a,b){return e("$filterProvider",a,"withMocks","for",b),this},this.filterWithMocksExcept=function(a,b){return e("$filterProvider",a,"withMocks","except",b),this},this.filterAsIs=function(a){return e("$filterProvider",a,"asIs"),this},this.controllerWithMocks=function(a){return e("$controllerProvider",a,"withMocks"),this},this.controllerWithMocksFor=function(a,b){return b=Array.prototype.slice.call(arguments,1),e("$controllerProvider",a,"withMocks","for",b),this},this.controllerWithMocksExcept=function(a,b){return e("$controllerProvider",a,"withMocks","except",b),this},this.controllerAsIs=function(a){return e("$controllerProvider",a,"asIs"),this},this.directiveWithMocks=function(a){return e("$compileProvider",a,"withMocks"),this},this.directiveWithMocksFor=function(a,b){return b=Array.prototype.slice.call(arguments,1),e("$compileProvider",a,"withMocks","for",b),this},this.directiveWithMocksExcept=function(a,b){return e("$compileProvider",a,"withMocks","except",b),this},this.directiveAsIs=function(a){return e("$compileProvider",a,"asIs"),this},this.animationWithMocks=function(a){return e("$animateProvider",a,"withMocks"),this},this.animationWithMocksFor=function(a,b){return b=Array.prototype.slice.call(arguments,1),e("$animateProvider",a,"withMocks","for",b),this},this.animationWithMocksExcept=function(a,b){return e("$animateProvider",a,"withMocks","except",b),this},this.animationAsIs=function(a){return e("$animateProvider",a,"asIs"),this},this.build=function(){function e(a){return["$provide","$filterProvider","$controllerProvider","$compileProvider","$animateProvider",function(b,c,d,e,f){var g={$provide:b,$filterProvider:c,$controllerProvider:d,$compileProvider:e,$animateProvider:f};a(g)}]}var h=e(function(e){function h(a){var b=a.providerName,d=a.componentName;if(i)return void c.warn("Ignoring `"+f(b)+"("+d+")` since `includeAll()` is also used.");if("$controllerProvider"===b||"$filterProvider"===b||"$compileProvider"===b||"$animateProvider"===b){var e=s.getProviderComponentDeclaration(b,d);angular.forEach(e.injectedServices,function(a){q.has(a)&&(o[a]=q.get(a))}),p[d]={providerName:b,providerMethod:e.providerMethod,declaration:e.rawDeclaration}}else{if("$provide"!==b)throw"Unsupported provider: "+b;o[d]=q.get(d)}}function k(a){var c=a.providerName,d=a.componentName,e=s.getProviderComponentDeclaration(c,d),f=[];if("$provide"===c){var g=s.getProviderComponentDeclaration("$provide",d).providerMethod;if("constant"===g||"value"===g)throw'Services declared with "contact" or "value" are not supported'}angular.forEach(e.injectedServices,function(c){if(q.has(c)){var d=l(a,c),e=q.get(c),g=b.canInstanceBeMocked(e);if(d&&!g&&"for"===a.dependenciesUsage)throw"Could not mock the dependency explicitly asked to mock: "+c;var h=d&&g;h?n[c]=e:i||(o[c]=e),f.push(c+(h?"Mock":""))}else f.push(c)}),f.push(e.strippedDeclaration),"$provide"===c&&"provider"===e.providerMethod&&(f={$get:f}),p[d]={providerName:c,providerMethod:e.providerMethod,declaration:f}}function l(a,b){var c=a.dependenciesUsage;if("for"===c)return-1!==a.dependencies.indexOf(b);if("except"===c)return-1===a.dependencies.indexOf(b);if(c)throw"Invalid dependencies usage: "+c;return!0}function m(a){angular.module(a)}var n={},o={},p={};m(d);var q=angular.injector(["ng","ngMock",d]);if(g){var r=q.get("$animate");if(r.enabled===angular.noop)throw'Animations were included in the to be build module, but the orginal module didn\'t the "ngAnimate" module: '+d}var s=a(d);angular.forEach(j,function(a){"asIs"===a.componentKind?h(a):"withMocks"===a.componentKind&&k(a)}),angular.forEach(n,function(a,c){var d=b.mockInstance(a);e.$provide.value(c+"Mock",d)}),angular.forEach(o,function(a,b){e.$provide.value(b,a)}),angular.forEach(p,function(a,b){e[a.providerName][a.providerMethod](b,a.declaration)})}),k=[];return g&&!i&&k.push("ngAnimate"),i&&k.push(d),k.push(h),k.push("ngImprovedTesting"),angular.mock.module.apply(void 0,k)}}return{forModule:function(a){return new d(a)}}}angular.module("ngImprovedTesting",["ngImprovedTesting.$q"]);var c={$qTick:!1},d={$qTickEnable:function(){return afterEach(function(){c.$qTick=!1}),function(){c.$qTick=!0}}};angular.module("ngImprovedTesting.internal.config",[]).constant("ngImprovedTestingConfigFlags",c).constant("ngImprovedTestingConfig",d),angular.module("ngImprovedTesting.internal.mockCreator",[]).service("mockCreator",a),b.$inject=["moduleIntrospector","mockCreator","$log"],angular.module("ngImprovedTesting.internal.moduleBuilder",["ngModuleIntrospector","ngImprovedTesting.internal.mockCreator"]).factory("moduleBuilder",b);var e=angular.injector(["ng","ngModuleIntrospector"]),b=e.get("moduleIntrospector"),f=b("ng"),g=f.getProviderDeclaration("$qProvider").rawDeclaration,h=angular.injector(["ng"]),i=h.instantiate(g,{});angular.module("ngImprovedTesting.$q",["ngImprovedTesting.internal.config"]).provider("$q",["ngImprovedTestingConfigFlags",function(a){this.$get=["$rootScope","$exceptionHandler",function(b,c){var d=null;a.$qTick&&(d=[],b={$evalAsync:function(a){d.push(a)}});var e=i.$get[i.$get.length-1](b,c);return a.$qTick&&(e.tick=function(){for(;d.length;){var a=d.slice(0);d.length=0;for(var b=0;b<a.length;b+=1)a[b]()}}),e}]}]);var j=angular.injector(["ng","ngImprovedTesting.internal.config","ngImprovedTesting.internal.mockCreator","ngImprovedTesting.internal.moduleBuilder"]),k=j.get("mockCreator");window.ngImprovedTesting={mockInstance:k.mockInstance,config:j.get("ngImprovedTestingConfig")},window.mockInstance=window.ngImprovedTesting.mockInstance,window.ModuleBuilder=j.get("moduleBuilder")}();